/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.personManager;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author purka
 */
public class ListPersonsJPanel extends javax.swing.JPanel {

    private PersonDirectory persons;
    private JPanel userProcessContainer;
    
    /**
     * Creates new form ListPersonsJPanel
     */
    public ListPersonsJPanel(PersonDirectory persons, JPanel userProcessContainer) {
        initComponents();
        
        this.persons = persons;
        this.userProcessContainer = userProcessContainer;
        
        loadPersonsInTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        scrollPane = new javax.swing.JScrollPane();
        tblPerson = new javax.swing.JTable();
        btnViewPerson = new javax.swing.JButton();
        btnDeletePerson = new javax.swing.JButton();

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("LIST OF PERSONS ");

        tblPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FIRST NAME", "LAST NAME", "HOME CITY", "HOME ZIP ", "WORK CITY", "WORK ZIP "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane.setViewportView(tblPerson);

        btnViewPerson.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/icons/view.png"))); // NOI18N
        btnViewPerson.setText("VIEW PERSON");
        btnViewPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPersonActionPerformed(evt);
            }
        });

        btnDeletePerson.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/icons/delete.png"))); // NOI18N
        btnDeletePerson.setText("DELETE PERSON");
        btnDeletePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePersonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnViewPerson)
                .addGap(57, 57, 57)
                .addComponent(btnDeletePerson)
                .addGap(149, 149, 149))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeletePerson, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(134, 134, 134))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPersonActionPerformed
        int selectedRow = tblPerson.getSelectedRow();
        
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, 
                    "First select a row", 
                    "Warning", 
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Person selectedPerson = (Person) tblPerson.getValueAt(selectedRow, 0);
        
        ViewPersonJPanel panel = new ViewPersonJPanel(persons, userProcessContainer, selectedPerson);
        userProcessContainer.add("ViewPersonJPanel", panel);
        
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewPersonActionPerformed

    private void btnDeletePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePersonActionPerformed
        int selectedRow = tblPerson.getSelectedRow();
        
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, 
                    "First select a row", 
                    "Warning", 
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int dialogResult = JOptionPane.showConfirmDialog(this, 
                    "Are you sure you want to delete this person?" ,
                    "Warning",
                    JOptionPane.WARNING_MESSAGE);
            
        if (dialogResult == JOptionPane.YES_NO_OPTION) {
            Person selectedPerson = (Person) tblPerson.getValueAt(selectedRow, 0);
                
            persons.deletePerson(selectedPerson);
                
            JOptionPane.showMessageDialog(this, 
                    "Person deleted!", 
                    "Success", 
                    JOptionPane.INFORMATION_MESSAGE);
            
            loadPersonsInTable();
        }
    }//GEN-LAST:event_btnDeletePersonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeletePerson;
    private javax.swing.JButton btnViewPerson;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tblPerson;
    // End of variables declaration//GEN-END:variables

    public void loadPersonsInTable() {
        DefaultTableModel model = (DefaultTableModel) tblPerson.getModel();
        model.setRowCount(0);
        
        for(Person person : persons.getPersons()) {
            
            Object[] row = new Object[6];
            row[0] = person;
            row[1] = person.getLastName();
            row[2] = person.getHomeAddress().getCity();
            row[3] = person.getHomeAddress().getZip();
            row[4] = person.getWorkAddress().getCity();
            row[5] = person.getWorkAddress().getZip();
            
            model.addRow(row);
        }
    }
}
