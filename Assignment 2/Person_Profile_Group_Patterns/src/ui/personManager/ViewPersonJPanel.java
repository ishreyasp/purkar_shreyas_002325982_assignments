/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.personManager;

import javax.swing.JOptionPane;
import model.Person;
import model.PersonDirectory;

/**
 * Class for ViewPersonJPanel
 * 
 * @author Shreyas Purkar
 */
public class ViewPersonJPanel extends javax.swing.JPanel {

    private PersonDirectory persons;
    private Person selectedPerson;
    
    /**
     * Creates new form ViewPersonJPanel
     */
    public ViewPersonJPanel(PersonDirectory persons, Person selectedPerson) {
        initComponents();
        
        this.persons = persons;
        this.selectedPerson = selectedPerson;
        
        populatePersonDetails();
        setViewMode();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPersonInfo = new javax.swing.JLabel();
        lblHomeAdd = new javax.swing.JLabel();
        lblHmStreetAdd = new javax.swing.JLabel();
        personInfoSeparator = new javax.swing.JSeparator();
        txtHmStreetAdd = new javax.swing.JTextField();
        txtHmCity = new javax.swing.JTextField();
        lblHmCity = new javax.swing.JLabel();
        txtHmUnit = new javax.swing.JTextField();
        lblHmUnit = new javax.swing.JLabel();
        lblHmZip = new javax.swing.JLabel();
        txtHmZip = new javax.swing.JTextField();
        lblHmPhoneNum = new javax.swing.JLabel();
        txtHmPhoneNum = new javax.swing.JTextField();
        lblHmState = new javax.swing.JLabel();
        txtHmState = new javax.swing.JTextField();
        lblWorkAdd = new javax.swing.JLabel();
        homeAddSeparator = new javax.swing.JSeparator();
        txtWrkStreetAdd = new javax.swing.JTextField();
        lblWrkStreetAdd = new javax.swing.JLabel();
        txtWrkUnit = new javax.swing.JTextField();
        txtWrkZip = new javax.swing.JTextField();
        txtWrkCity = new javax.swing.JTextField();
        txtWrkPhoneNum = new javax.swing.JTextField();
        txtWrkState = new javax.swing.JTextField();
        lblWrkState = new javax.swing.JLabel();
        lblWrkPhoneNum = new javax.swing.JLabel();
        lblWrkCity = new javax.swing.JLabel();
        lblWrkUnit = new javax.swing.JLabel();
        lblWrkZip = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        lblSsn = new javax.swing.JLabel();
        txtSsn = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblErrFirstName = new javax.swing.JLabel();
        lblErrLastName = new javax.swing.JLabel();
        lblErrSsn = new javax.swing.JLabel();
        lblErrAge = new javax.swing.JLabel();
        lblErrHmStAdd = new javax.swing.JLabel();
        lblErrHmUnit = new javax.swing.JLabel();
        lblErrHmZip = new javax.swing.JLabel();
        lblErrHmPhone = new javax.swing.JLabel();
        lblErrWrkStAdd = new javax.swing.JLabel();
        lblErrWrkUnit = new javax.swing.JLabel();
        lblErrWrkCity = new javax.swing.JLabel();
        lblErrWrkState = new javax.swing.JLabel();
        lblErrWrkZip = new javax.swing.JLabel();
        lblErrWrkPhone = new javax.swing.JLabel();
        lblErrHmCity = new javax.swing.JLabel();
        lblErrHmState = new javax.swing.JLabel();

        lblPersonInfo.setText("PERSONAL INFORMATION");

        lblHomeAdd.setText("HOME ADDRESS");

        lblHmStreetAdd.setText("STREET ADDRESS");

        txtHmStreetAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtHmStreetAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHmStreetAddKeyReleased(evt);
            }
        });

        txtHmCity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtHmCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHmCityKeyReleased(evt);
            }
        });

        lblHmCity.setText("CITY");

        txtHmUnit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtHmUnit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHmUnitKeyReleased(evt);
            }
        });

        lblHmUnit.setText("UNIT");

        lblHmZip.setText("ZIP CODE");

        txtHmZip.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtHmZip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHmZipKeyReleased(evt);
            }
        });

        lblHmPhoneNum.setText("PHONE NUMBER");

        txtHmPhoneNum.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtHmPhoneNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHmPhoneNumKeyReleased(evt);
            }
        });

        lblHmState.setText("STATE");

        txtHmState.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtHmState.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHmStateKeyReleased(evt);
            }
        });

        lblWorkAdd.setText("WORK ADDRESS");

        txtWrkStreetAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtWrkStreetAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWrkStreetAddKeyReleased(evt);
            }
        });

        lblWrkStreetAdd.setText("STREET ADDRESS");

        txtWrkUnit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtWrkUnit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWrkUnitKeyReleased(evt);
            }
        });

        txtWrkZip.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtWrkZip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWrkZipKeyReleased(evt);
            }
        });

        txtWrkCity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtWrkCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWrkCityKeyReleased(evt);
            }
        });

        txtWrkPhoneNum.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtWrkPhoneNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWrkPhoneNumKeyReleased(evt);
            }
        });

        txtWrkState.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtWrkState.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWrkStateKeyReleased(evt);
            }
        });

        lblWrkState.setText("STATE");

        lblWrkPhoneNum.setText("PHONE NUMBER");

        lblWrkCity.setText("CITY");

        lblWrkUnit.setText("UNIT");

        lblWrkZip.setText("ZIP CODE");

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/icons/save.png"))); // NOI18N
        btnSave.setText("SAVE");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/icons/update.png"))); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblFirstName.setText("FIRST NAME");

        txtFirstName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtFirstName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFirstNameKeyReleased(evt);
            }
        });

        txtLastName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtLastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLastNameKeyReleased(evt);
            }
        });

        lblLastName.setText("LAST NAME");

        lblSsn.setText("SOCIAL SECURITY NUMBER");

        txtSsn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtSsn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSsnKeyReleased(evt);
            }
        });

        lblAge.setText("AGE");

        txtAge.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAgeKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("VIEW PERSON");

        lblErrFirstName.setForeground(new java.awt.Color(255, 0, 0));

        lblErrLastName.setForeground(new java.awt.Color(255, 0, 0));

        lblErrSsn.setForeground(new java.awt.Color(255, 0, 0));

        lblErrAge.setForeground(new java.awt.Color(255, 0, 0));

        lblErrHmStAdd.setForeground(new java.awt.Color(255, 0, 0));

        lblErrHmUnit.setForeground(new java.awt.Color(255, 0, 0));

        lblErrHmZip.setForeground(new java.awt.Color(255, 0, 0));

        lblErrHmPhone.setForeground(new java.awt.Color(255, 0, 0));

        lblErrWrkStAdd.setForeground(new java.awt.Color(255, 0, 0));

        lblErrWrkUnit.setForeground(new java.awt.Color(255, 0, 0));

        lblErrWrkCity.setForeground(new java.awt.Color(255, 0, 0));

        lblErrWrkState.setForeground(new java.awt.Color(255, 0, 0));

        lblErrWrkZip.setForeground(new java.awt.Color(255, 0, 0));

        lblErrWrkPhone.setForeground(new java.awt.Color(255, 0, 0));

        lblErrHmCity.setForeground(new java.awt.Color(255, 0, 51));

        lblErrHmState.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblWrkUnit)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblErrWrkUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(41, 41, 41))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtWrkUnit)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblWrkCity, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblErrWrkCity, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(txtWrkCity, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                        .addComponent(lblWrkState, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblErrWrkState, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtWrkState, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblWrkZip)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(lblErrWrkZip, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                                    .addComponent(txtWrkZip))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(lblWrkPhoneNum))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(77, 77, 77)
                                                .addComponent(btnSave)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnUpdate)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(lblErrWrkPhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtWrkPhoneNum))))
                                .addGap(48, 48, 48))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblWrkStreetAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblErrWrkStAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                                    .addComponent(txtWrkStreetAdd))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblFirstName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblErrFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtFirstName))
                                .addGap(18, 18, 18)
                                .addComponent(lblLastName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblErrLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtLastName, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSsn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblErrSsn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(22, 22, 22))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtSsn)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblAge)
                                        .addGap(4, 4, 4)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtAge, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .addComponent(lblErrAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPersonInfo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(homeAddSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(32, 32, 32)
                                                        .addComponent(lblErrHmUnit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(lblHmUnit)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(txtHmUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(18, 18, 18)
                                                .addComponent(lblHmCity, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblHmZip)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblErrHmZip, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtHmZip))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblErrHmCity, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtHmCity, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(lblHmState, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtHmState)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(lblErrHmPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(lblErrHmState))
                                                        .addGap(0, 0, Short.MAX_VALUE))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblHmPhoneNum)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtHmPhoneNum))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblHmStreetAdd)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblErrHmStAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                                            .addComponent(txtHmStreetAdd)))))
                            .addComponent(personInfoSeparator, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblWorkAdd)
                            .addComponent(lblHomeAdd))
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSave, btnUpdate});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPersonInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLastName))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblErrFirstName)
                    .addComponent(lblErrLastName))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSsn)
                    .addComponent(txtSsn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAge)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblErrSsn)
                    .addComponent(lblErrAge))
                .addGap(12, 12, 12)
                .addComponent(personInfoSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHomeAdd)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHmStreetAdd)
                    .addComponent(txtHmStreetAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(lblErrHmStAdd)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHmCity)
                    .addComponent(txtHmCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHmState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHmState)
                    .addComponent(lblHmUnit)
                    .addComponent(txtHmUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblErrHmCity)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblErrHmUnit)
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblHmZip)
                                    .addComponent(txtHmZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblHmPhoneNum)
                                    .addComponent(txtHmPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblErrHmState))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblErrHmPhone)
                            .addComponent(lblErrHmZip))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(homeAddSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblWorkAdd)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblWrkStreetAdd)
                            .addComponent(txtWrkStreetAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblErrWrkStAdd)
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWrkUnit)
                            .addComponent(txtWrkUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWrkCity)
                            .addComponent(txtWrkCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWrkState)
                            .addComponent(txtWrkState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblErrWrkUnit)
                            .addComponent(lblErrWrkCity)
                            .addComponent(lblErrWrkState))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWrkZip)
                            .addComponent(txtWrkZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWrkPhoneNum)
                            .addComponent(txtWrkPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblErrWrkZip)
                            .addComponent(lblErrWrkPhone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave)
                            .addComponent(btnUpdate))
                        .addGap(50, 50, 50))))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtFirstName, txtHmCity, txtHmPhoneNum, txtHmState, txtHmUnit, txtHmZip, txtLastName, txtWrkCity, txtWrkPhoneNum, txtWrkState, txtWrkStreetAdd, txtWrkUnit, txtWrkZip});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnSave, btnUpdate});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblFirstName, lblHmStreetAdd});

    }// </editor-fold>//GEN-END:initComponents

    /**
     * Method to handle update person button click action
     * 
     * @param evt event
     */
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        setEditMode();
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * Method to handle save person button click action
     * 
     * @param evt event
     */
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (!validateFormFields()) {
             return;
         }
         
         Person person = new Person();
         
         person.setFirstName(txtFirstName.getText());
         person.setLastName(txtLastName.getText());
         person.setSsn(txtSsn.getText());
         try {
             person.setAge(Byte.parseByte(txtAge.getText()));
         } catch(NumberFormatException e) {
           JOptionPane.showMessageDialog(this, 
                "Please check the age input", 
                "Warning", 
                JOptionPane.WARNING_MESSAGE);
            return;
         }
         
         if(!getHomeAddress(person)) {
             return;
         }
                  
         if (!getWorkAddress(person)) {
             return;
         }
         
         persons.deletePerson(selectedPerson);
         
         persons.addPerson(person);
         
         JOptionPane.showMessageDialog(this, 
               "Person Successfully Updated", 
               "Success", 
               JOptionPane.INFORMATION_MESSAGE);
        
         setViewMode();
    }//GEN-LAST:event_btnSaveActionPerformed
    
    private void txtFirstNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstNameKeyReleased
        lblErrFirstName.setText("");
        txtFirstName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtFirstNameKeyReleased

    private void txtLastNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastNameKeyReleased
        lblErrLastName.setText("");
        txtLastName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtLastNameKeyReleased

    private void txtSsnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSsnKeyReleased
        lblErrSsn.setText("");
        txtSsn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtSsnKeyReleased

    private void txtAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyReleased
        lblErrAge.setText("");
        txtAge.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtAgeKeyReleased

    private void txtHmStreetAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHmStreetAddKeyReleased
        lblErrHmStAdd.setText("");
        txtHmStreetAdd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtHmStreetAddKeyReleased

    private void txtHmUnitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHmUnitKeyReleased
        lblErrHmUnit.setText("");
        txtHmUnit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtHmUnitKeyReleased

    private void txtHmCityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHmCityKeyReleased
        lblErrHmCity.setText("");
        txtHmCity.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtHmCityKeyReleased

    private void txtHmStateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHmStateKeyReleased
        lblErrHmState.setText("");
        txtHmState.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtHmStateKeyReleased

    private void txtHmZipKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHmZipKeyReleased
        lblErrHmZip.setText("");
        txtHmZip.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtHmZipKeyReleased

    private void txtHmPhoneNumKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHmPhoneNumKeyReleased
        lblErrHmPhone.setText("");
        txtHmPhoneNum.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtHmPhoneNumKeyReleased

    private void txtWrkStreetAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWrkStreetAddKeyReleased
       lblErrWrkStAdd.setText("");
       txtWrkStreetAdd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtWrkStreetAddKeyReleased

    private void txtWrkUnitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWrkUnitKeyReleased
        lblErrWrkUnit.setText("");
        txtWrkUnit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtWrkUnitKeyReleased

    private void txtWrkCityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWrkCityKeyReleased
        lblErrWrkCity.setText("");
        txtWrkCity.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtWrkCityKeyReleased

    private void txtWrkStateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWrkStateKeyReleased
        lblErrWrkState.setText("");
        txtWrkState.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtWrkStateKeyReleased

    private void txtWrkZipKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWrkZipKeyReleased
        lblErrWrkZip.setText("");
        txtWrkZip.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtWrkZipKeyReleased

    private void txtWrkPhoneNumKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWrkPhoneNumKeyReleased
        lblErrWrkPhone.setText("");
        txtWrkPhoneNum.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
    }//GEN-LAST:event_txtWrkPhoneNumKeyReleased

    /**
     * Method to validate form fields
     * 
     * @return true if valid else return false
     */
    private boolean validateFormFields() {
        if (txtFirstName.getText().isBlank()
                && txtWrkZip.getText().isBlank()
                && txtWrkUnit.getText().isBlank()
                && txtWrkStreetAdd.getText().isBlank()
                && txtWrkState.getText().isBlank()
                && txtWrkPhoneNum.getText().isBlank()
                && txtWrkCity.getText().isBlank()
                && txtHmZip.getText().isBlank()
                && txtHmUnit.getText().isBlank()
                && txtHmPhoneNum.getText().isBlank()
                && txtHmState.getText().isBlank()
                && txtHmCity.getText().isBlank()
                && txtHmStreetAdd.getText().isBlank()
                && txtAge.getText().isBlank()
                && txtSsn.getText().isBlank()
                && txtLastName.getText().isBlank()) {
            lblErrFirstName.setText("Required");
            txtFirstName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrWrkZip.setText("Required");
            txtWrkZip.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrWrkStAdd.setText("Required");
            txtWrkStreetAdd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrWrkState.setText("Required");
            txtWrkState.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrWrkCity.setText("Required");
            txtWrkCity.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrWrkPhone.setText("Required");
            txtWrkPhoneNum.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrHmZip.setText("Required");
            txtHmZip.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrHmUnit.setText("Required");
            txtHmUnit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrHmPhone.setText("Required");
            txtHmPhoneNum.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrHmState.setText("Required");
            txtHmState.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrAge.setText("Required");
            txtAge.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrSsn.setText("Required");
            txtSsn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrLastName.setText("Required");
            txtLastName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrHmCity.setText("Required");
            txtHmCity.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrWrkUnit.setText("Required");
            txtWrkUnit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            lblErrHmStAdd.setText("Required");
            txtHmStreetAdd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtFirstName.getText().isBlank()) {
            lblErrFirstName.setText("Required");
            txtFirstName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtLastName.getText().isBlank()) {
            lblErrLastName.setText("Required");
            txtLastName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtSsn.getText().isBlank()) {
            lblErrSsn.setText("Required");
            txtSsn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtAge.getText().isBlank()) {
            lblErrAge.setText("Required");
            txtAge.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtHmStreetAdd.getText().isBlank()) {
            lblErrHmStAdd.setText("Required");
            txtHmStreetAdd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtHmUnit.getText().isBlank()) {
            lblErrHmUnit.setText("Required");
            txtHmUnit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtHmCity.getText().isBlank()) {
            lblErrHmCity.setText("Required");
            txtHmCity.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtHmState.getText().isBlank()) {
            lblErrHmState.setText("Required");
            txtHmState.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtHmZip.getText().isBlank()) {
            lblErrHmZip.setText("Required");
            txtHmZip.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtHmPhoneNum.getText().isBlank()) {
            lblErrHmPhone.setText("Required");
            txtWrkPhoneNum.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtWrkStreetAdd.getText().isBlank()) {
            lblErrWrkStAdd.setText("Required");
            txtWrkStreetAdd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
         if (txtWrkUnit.getText().isBlank()) {
            lblErrWrkUnit.setText("Required");
            txtWrkUnit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtWrkCity.getText().isBlank()) {
            lblErrWrkCity.setText("Required");
            txtWrkCity.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtWrkState.getText().isBlank()) {
            lblErrWrkState.setText("Required");
            txtWrkState.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtWrkZip.getText().isBlank()) {
            lblErrWrkZip.setText("Required");
            txtWrkZip.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        
        if (txtWrkPhoneNum.getText().isBlank()) {
            lblErrWrkPhone.setText("Required");
            txtWrkPhoneNum.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, false));
            return false;
        }
        return true;
    }
    
    /**
     * Method to validate and fetch home address form fields
     */
    private boolean getHomeAddress(Person person) {
        String city = txtHmCity.getText();
        String streetAddress = txtHmStreetAdd.getText();
        String state = txtHmState.getText();
        long phoneNumber;
        short unitNumber;
        int zipCode;
        
        try {
             phoneNumber = Long.parseLong(txtHmPhoneNum.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "Phone number of your home can only be numeric value", 
                "Warning", 
                JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        if (txtHmPhoneNum.getText().length() != 10) {
            JOptionPane.showMessageDialog(this, 
                "Phone number of your home must be 10 digits only", 
                "Warning", 
                JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        try {
            unitNumber = Short.parseShort(txtHmUnit.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "Unit number of your home can only be numeric value", 
                "Warning", 
                JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        try {
            zipCode = Integer.parseInt(txtHmZip.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "Zip code of your home can only be numeric value", 
                "Warning", 
                JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        person.setHomeAddress(streetAddress, unitNumber, city, state, zipCode, phoneNumber);
        return true;
    }

    /**
     * Method to validate and fetch work address form fields
     */
    private boolean getWorkAddress(Person person) {
        String city = txtWrkCity.getText();
        String streetAddress = txtWrkStreetAdd.getText();
        String state = txtWrkState.getText();
        long phoneNumber;
        short unitNumber;
        int zipCode;
        
        try {
             phoneNumber = Long.parseLong(txtWrkPhoneNum.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "Phone number of your work can only be numeric value", 
                "Warning", 
                JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        if (txtWrkPhoneNum.getText().length() != 10) {
            JOptionPane.showMessageDialog(this, 
                "Phone number of your work must be 10 digits only", 
                "Warning", 
                JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        try {
            unitNumber = Short.parseShort(txtWrkUnit.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "Unit number of your work can only be numeric value", 
                "Warning", 
                JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        try {
            zipCode = Integer.parseInt(txtWrkZip.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "Zip code of your work can only be numeric value", 
                "Warning", 
                JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        person.setWorkAddress(streetAddress, unitNumber, city, state, zipCode, phoneNumber);
        return true;
    }
    
    /**
     * Method to populate accounts table
     */
    private void populatePersonDetails() {
        txtAge.setText(String.valueOf(selectedPerson.getAge()));
        txtFirstName.setText(selectedPerson.getFirstName());
        txtHmCity.setText(selectedPerson.getHomeAddress().getCity());
        txtHmPhoneNum.setText(String.valueOf(selectedPerson.getHomeAddress().getPhoneNumber()));
        txtHmState.setText(selectedPerson.getHomeAddress().getState());
        txtHmStreetAdd.setText(selectedPerson.getHomeAddress().getStreetAddress());
        txtHmUnit.setText(String.valueOf(selectedPerson.getHomeAddress().getUnitNumber()));
        txtHmZip.setText(String.valueOf(selectedPerson.getHomeAddress().getZip()));
        txtLastName.setText(selectedPerson.getLastName());
        txtSsn.setText(selectedPerson.getSsn());
        txtWrkCity.setText(selectedPerson.getWorkAddress().getCity());
        txtWrkPhoneNum.setText(String.valueOf(selectedPerson.getWorkAddress().getPhoneNumber()));
        txtWrkState.setText(selectedPerson.getWorkAddress().getState());
        txtWrkStreetAdd.setText(selectedPerson.getWorkAddress().getStreetAddress());
        txtWrkUnit.setText(String.valueOf(selectedPerson.getWorkAddress().getUnitNumber()));
        txtWrkZip.setText(String.valueOf(selectedPerson.getWorkAddress().getZip()));
    }

    /**
     * Method to view account details in view mode
     */
    private void setViewMode() {
        txtAge.setEnabled(false);
        txtFirstName.setEnabled(false);
        txtHmCity.setEnabled(false);
        txtHmPhoneNum.setEnabled(false);
        txtHmState.setEnabled(false);
        txtHmStreetAdd.setEnabled(false);
        txtHmUnit.setEnabled(false);
        txtHmZip.setEnabled(false);
        txtLastName.setEnabled(false);
        txtSsn.setEnabled(false);
        txtWrkCity.setEnabled(false);
        txtWrkPhoneNum.setEnabled(false);
        txtWrkState.setEnabled(false);
        txtWrkStreetAdd.setEnabled(false);
        txtWrkUnit.setEnabled(false);
        txtWrkZip.setEnabled(false);
        
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
    }
    
    /**
     * Method to view account details in edit mode
     */
    private void setEditMode() {
        txtAge.setEnabled(true);
        txtFirstName.setEnabled(true);
        txtHmCity.setEnabled(true);
        txtHmPhoneNum.setEnabled(true);
        txtHmState.setEnabled(true);
        txtHmStreetAdd.setEnabled(true);
        txtHmUnit.setEnabled(true);
        txtHmZip.setEnabled(true);
        txtLastName.setEnabled(true);
        txtSsn.setEnabled(true);
        txtWrkCity.setEnabled(true);
        txtWrkPhoneNum.setEnabled(true);
        txtWrkState.setEnabled(true);
        txtWrkStreetAdd.setEnabled(true);
        txtWrkUnit.setEnabled(true);
        txtWrkZip.setEnabled(true);
        
        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JSeparator homeAddSeparator;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblErrAge;
    private javax.swing.JLabel lblErrFirstName;
    private javax.swing.JLabel lblErrHmCity;
    private javax.swing.JLabel lblErrHmPhone;
    private javax.swing.JLabel lblErrHmStAdd;
    private javax.swing.JLabel lblErrHmState;
    private javax.swing.JLabel lblErrHmUnit;
    private javax.swing.JLabel lblErrHmZip;
    private javax.swing.JLabel lblErrLastName;
    private javax.swing.JLabel lblErrSsn;
    private javax.swing.JLabel lblErrWrkCity;
    private javax.swing.JLabel lblErrWrkPhone;
    private javax.swing.JLabel lblErrWrkStAdd;
    private javax.swing.JLabel lblErrWrkState;
    private javax.swing.JLabel lblErrWrkUnit;
    private javax.swing.JLabel lblErrWrkZip;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblHmCity;
    private javax.swing.JLabel lblHmPhoneNum;
    private javax.swing.JLabel lblHmState;
    private javax.swing.JLabel lblHmStreetAdd;
    private javax.swing.JLabel lblHmUnit;
    private javax.swing.JLabel lblHmZip;
    private javax.swing.JLabel lblHomeAdd;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblPersonInfo;
    private javax.swing.JLabel lblSsn;
    private javax.swing.JLabel lblWorkAdd;
    private javax.swing.JLabel lblWrkCity;
    private javax.swing.JLabel lblWrkPhoneNum;
    private javax.swing.JLabel lblWrkState;
    private javax.swing.JLabel lblWrkStreetAdd;
    private javax.swing.JLabel lblWrkUnit;
    private javax.swing.JLabel lblWrkZip;
    private javax.swing.JSeparator personInfoSeparator;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtHmCity;
    private javax.swing.JTextField txtHmPhoneNum;
    private javax.swing.JTextField txtHmState;
    private javax.swing.JTextField txtHmStreetAdd;
    private javax.swing.JTextField txtHmUnit;
    private javax.swing.JTextField txtHmZip;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtSsn;
    private javax.swing.JTextField txtWrkCity;
    private javax.swing.JTextField txtWrkPhoneNum;
    private javax.swing.JTextField txtWrkState;
    private javax.swing.JTextField txtWrkStreetAdd;
    private javax.swing.JTextField txtWrkUnit;
    private javax.swing.JTextField txtWrkZip;
    // End of variables declaration//GEN-END:variables
}
